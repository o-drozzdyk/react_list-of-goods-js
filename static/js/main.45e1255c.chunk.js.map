{"version":3,"sources":["functions.jsx","App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","goods","data","sort","a","b","localeCompare","length","sortedData","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mOAAMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAsB,WACtBC,EAAoB,S,OCHpBC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EDEkB,SAACJ,EAAWE,GACpC,IAAIG,EAEJ,OAAQL,GACN,KAAKJ,EACHS,EAAO,UAAIV,GAAiBW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3D,MACF,KAAKX,EACHQ,EAAO,UAAIV,GAAiBW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACxD,MACF,QACEL,EAAI,UAAOV,GAOf,OAJIO,IACFG,EAAOA,EAAKH,WAGPG,ECpBOM,CAAWX,EAAWE,GAEpC,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYd,IAAcJ,IAG9BmB,QAAS,kBAAMd,EAAaL,IAT9B,iCAcA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYd,IAAcH,IAG9BkB,QAAS,kBAAMd,EAAaJ,IAT9B,4BAcA,wBACEgB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAwB,IAAZZ,IAGhBa,QAAS,WACPZ,GAAwB,IAAZD,IAAsB,IAVtC,sBAgBEF,GAAaE,IACb,wBACEW,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,EAAa,IACbE,GAAW,IALf,sBAaJ,6BACGC,EAAMY,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5ElCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.45e1255c.chunk.js","sourcesContent":["const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const SORT_FIELD_ALPHABET = 'alphabet';\nexport const SORT_FIELD_LENGTH = 'length';\n\nexport const sortedData = (sortField, reverse) => {\n  let data;\n\n  switch (sortField) {\n    case SORT_FIELD_ALPHABET:\n      data = [...goodsFromServer].sort((a, b) => a.localeCompare(b));\n      break;\n    case SORT_FIELD_LENGTH:\n      data = [...goodsFromServer].sort((a, b) => a.length - b.length);\n      break;\n    default:\n      data = [...goodsFromServer];\n  }\n\n  if (reverse) {\n    data = data.reverse();\n  }\n\n  return data;\n};\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nimport {\n  sortedData,\n  SORT_FIELD_ALPHABET,\n  SORT_FIELD_LENGTH,\n} from './functions';\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const goods = sortedData(sortField, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortField !== SORT_FIELD_ALPHABET,\n            },\n          )}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            {\n              'is-light': sortField !== SORT_FIELD_LENGTH,\n            },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            {\n              'is-light': reverse === false,\n            },\n          )}\n          onClick={() => {\n            setReverse((reverse === false) && true);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}